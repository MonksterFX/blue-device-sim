"use strict";var txTyped=(()=>{var y=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var A=Object.prototype.hasOwnProperty;var p=(e,t)=>{for(var n in t)y(e,n,{get:t[n],enumerable:!0})},D=(e,t,n,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of g(t))!A.call(e,r)&&r!==n&&y(e,r,{get:()=>t[r],enumerable:!(o=b(t,r))||o.enumerable});return e};var z=e=>D(y({},"__esModule",{value:!0}),e);var x={};p(x,{ArrayBufferDecoder:()=>l,ArrayBufferEncoder:()=>w,ArrayBufferError:()=>u,BufferError:()=>s,ValidationError:()=>c,types:()=>I});function B(e){return{name:`String(${e})`,size:e,encode:t=>{let n=new ArrayBuffer(e),r=new TextEncoder().encode(t.padEnd(e,"\0").slice(0,e));return new Uint8Array(n).set(r),n},decode:(t,n)=>new TextDecoder().decode(new Uint8Array(t,n,e)).replace(/\0+$/,""),validate:t=>typeof t=="string"&&t.length<=e}}function V(e,t){return{name:`${e.name}(${t})`,size:e.size,encode:n=>{let o=new ArrayBuffer(e.size),r=new DataView(o);switch(e.name){case"Uint16":r.setUint16(0,n,t==="little");break;case"Uint32":r.setUint32(0,n,t==="little");break;case"Int16":r.setInt16(0,n,t==="little");break;case"Int32":r.setInt32(0,n,t==="little");break;case"Float32":r.setFloat32(0,n,t==="little");break;case"Double":r.setFloat64(0,n,t==="little");break;default:return e.encode(n)}return o},decode:(n,o)=>{let r=new DataView(n);switch(e.name){case"Uint16":return r.getUint16(o,t==="little");case"Uint32":return r.getUint32(o,t==="little");case"Int16":return r.getInt16(o,t==="little");case"Int32":return r.getInt32(o,t==="little");case"Float32":return r.getFloat32(o,t==="little");case"Double":return r.getFloat64(o,t==="little");default:return e.decode(n,o)}},validate:e.validate}}var I={Uint8:{name:"Uint8",size:1,encode:e=>{let t=new ArrayBuffer(1);return new Uint8Array(t)[0]=e,t},decode:(e,t)=>new Uint8Array(e,t,1)[0],validate:e=>Number.isInteger(e)&&e>=0&&e<=255},Uint16:{name:"Uint16",size:2,encode:e=>{let t=new ArrayBuffer(2);return new DataView(t).setUint16(0,e,!0),t},decode:(e,t)=>new DataView(e).getUint16(t,!0),validate:e=>Number.isInteger(e)&&e>=0&&e<=65535},Uint32:{name:"Uint32",size:4,encode:e=>{let t=new ArrayBuffer(4);return new DataView(t).setUint32(0,e,!0),t},decode:(e,t)=>new DataView(e).getUint32(t,!0),validate:e=>Number.isInteger(e)&&e>=0&&e<=4294967295},Int8:{name:"Int8",size:1,encode:e=>{let t=new ArrayBuffer(1);return new Int8Array(t)[0]=e,t},decode:(e,t)=>new Int8Array(e,t,1)[0],validate:e=>Number.isInteger(e)&&e>=-128&&e<=127},Int16:{name:"Int16",size:2,encode:e=>{let t=new ArrayBuffer(2);return new DataView(t).setInt16(0,e,!0),t},decode:(e,t)=>new DataView(e).getInt16(t,!0),validate:e=>Number.isInteger(e)&&e>=-32768&&e<=32767},Int32:{name:"Int32",size:4,encode:e=>{let t=new ArrayBuffer(4);return new DataView(t).setInt32(0,e,!0),t},decode:(e,t)=>new DataView(e).getInt32(t,!0),validate:e=>Number.isInteger(e)&&e>=-2147483648&&e<=2147483647},Float32:{name:"Float32",size:4,encode:e=>{let t=new ArrayBuffer(4);return new DataView(t).setFloat32(0,e,!0),t},decode:(e,t)=>new DataView(e).getFloat32(t,!0),validate:e=>typeof e=="number"},Double:{name:"Double",size:8,encode:e=>{let t=new ArrayBuffer(8);return new DataView(t).setFloat64(0,e,!0),t},decode:(e,t)=>new DataView(e).getFloat64(t,!0),validate:e=>typeof e=="number"},Boolean:{name:"Boolean",size:1,encode:e=>{let t=new ArrayBuffer(1);return new Uint8Array(t)[0]=e?1:0,t},decode:(e,t)=>new Uint8Array(e,t,1)[0]!==0,validate:e=>typeof e=="boolean"},String:B,Endian:V};var u=class extends Error{constructor(t){super(t),this.name="ArrayBufferError"}},c=class extends u{constructor(t){super(t),this.name="ValidationError"}},s=class extends u{constructor(t){super(t),this.name="BufferError"}};var w=class{encode(t,n){if(t.length!==n.length)throw new c("Data length must match types length");let o=n.reduce((a,f)=>a+f.size,0),r=new ArrayBuffer(o),m=new DataView(r),i=0;for(let a=0;a<t.length;a++){let f=t[a],d=n[a];if(!d.validate(f))throw new c(`Invalid value for type ${d.name}: ${f}`);let U=d.encode(f);new Uint8Array(r,i,d.size).set(new Uint8Array(U)),i+=d.size}return r}};var l=class{decode(t,n){let o=n.reduce((i,a)=>i+a.size,0);if(t.byteLength<o)throw new s("Buffer too small for types");let r=[],m=0;for(let i of n){let a=i.decode(t,m);r.push(a),m+=i.size}return r}};return z(x);})();
