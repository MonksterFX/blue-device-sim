"use strict";var typed=(()=>{var m=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var A=Object.getOwnPropertyNames;var b=Object.prototype.hasOwnProperty;var y=(t,e)=>{for(var r in e)m(t,r,{get:e[r],enumerable:!0})},z=(t,e,r,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of A(e))!b.call(t,n)&&n!==r&&m(t,n,{get:()=>e[n],enumerable:!(o=I(e,n))||o.enumerable});return t};var D=t=>z(m({},"__esModule",{value:!0}),t);var x={};y(x,{ArrayBufferDecoder:()=>l,ArrayBufferEncoder:()=>w,ArrayBufferError:()=>u,BufferError:()=>d,ValidationError:()=>c,types:()=>g});function B(t){return t===0||t===void 0?{name:"String",size:0,encode:e=>{if(typeof e!="string")throw new Error("Value must be a string");return new TextEncoder().encode(e).buffer},decode:(e,r=0)=>new TextDecoder().decode(new Uint8Array(e,r)),validate:e=>typeof e=="string"}:{name:`String(${t})`,size:t,encode:e=>{let r=new ArrayBuffer(t),n=new TextEncoder().encode(e.padEnd(t,"\0").slice(0,t));return new Uint8Array(r).set(n),r},decode:(e,r)=>new TextDecoder().decode(new Uint8Array(e,r,t)).replace(/\0+$/,""),validate:e=>typeof e=="string"&&e.length<=t}}function V(t,e){return{name:`${t.name}(${e})`,size:t.size,encode:r=>{let o=new ArrayBuffer(t.size),n=new DataView(o);switch(t.name){case"Uint16":n.setUint16(0,r,e==="little");break;case"Uint32":n.setUint32(0,r,e==="little");break;case"Int16":n.setInt16(0,r,e==="little");break;case"Int32":n.setInt32(0,r,e==="little");break;case"Float32":n.setFloat32(0,r,e==="little");break;case"Double":n.setFloat64(0,r,e==="little");break;default:return t.encode(r)}return o},decode:(r,o)=>{let n=new DataView(r);switch(t.name){case"Uint16":return n.getUint16(o,e==="little");case"Uint32":return n.getUint32(o,e==="little");case"Int16":return n.getInt16(o,e==="little");case"Int32":return n.getInt32(o,e==="little");case"Float32":return n.getFloat32(o,e==="little");case"Double":return n.getFloat64(o,e==="little");default:return t.decode(r,o)}},validate:t.validate}}var g={Uint8:{name:"Uint8",size:1,encode:t=>{let e=new ArrayBuffer(1);return new Uint8Array(e)[0]=t,e},decode:(t,e)=>new Uint8Array(t,e,1)[0],validate:t=>Number.isInteger(t)&&t>=0&&t<=255},Uint16:{name:"Uint16",size:2,encode:t=>{let e=new ArrayBuffer(2);return new DataView(e).setUint16(0,t,!0),e},decode:(t,e)=>new DataView(t).getUint16(e,!0),validate:t=>Number.isInteger(t)&&t>=0&&t<=65535},Uint32:{name:"Uint32",size:4,encode:t=>{let e=new ArrayBuffer(4);return new DataView(e).setUint32(0,t,!0),e},decode:(t,e)=>new DataView(t).getUint32(e,!0),validate:t=>Number.isInteger(t)&&t>=0&&t<=4294967295},Int8:{name:"Int8",size:1,encode:t=>{let e=new ArrayBuffer(1);return new Int8Array(e)[0]=t,e},decode:(t,e)=>new Int8Array(t,e,1)[0],validate:t=>Number.isInteger(t)&&t>=-128&&t<=127},Int16:{name:"Int16",size:2,encode:t=>{let e=new ArrayBuffer(2);return new DataView(e).setInt16(0,t,!0),e},decode:(t,e)=>new DataView(t).getInt16(e,!0),validate:t=>Number.isInteger(t)&&t>=-32768&&t<=32767},Int32:{name:"Int32",size:4,encode:t=>{let e=new ArrayBuffer(4);return new DataView(e).setInt32(0,t,!0),e},decode:(t,e)=>new DataView(t).getInt32(e,!0),validate:t=>Number.isInteger(t)&&t>=-2147483648&&t<=2147483647},Float32:{name:"Float32",size:4,encode:t=>{let e=new ArrayBuffer(4);return new DataView(e).setFloat32(0,t,!0),e},decode:(t,e)=>new DataView(t).getFloat32(e,!0),validate:t=>typeof t=="number"},Double:{name:"Double",size:8,encode:t=>{let e=new ArrayBuffer(8);return new DataView(e).setFloat64(0,t,!0),e},decode:(t,e)=>new DataView(t).getFloat64(e,!0),validate:t=>typeof t=="number"},Boolean:{name:"Boolean",size:1,encode:t=>{let e=new ArrayBuffer(1);return new Uint8Array(e)[0]=t?1:0,e},decode:(t,e)=>new Uint8Array(t,e,1)[0]!==0,validate:t=>typeof t=="boolean"},String:B,Endian:V};var u=class extends Error{constructor(e){super(e),this.name="ArrayBufferError"}},c=class extends u{constructor(e){super(e),this.name="ValidationError"}},d=class extends u{constructor(e){super(e),this.name="BufferError"}};var w=class{encode(e,r){if(e.length!==r.length)throw new c("Data length must match types length");if(r.length===1&&r[0].name==="String"){if(!r[0].validate(e[0]))throw new c("Value must be a string");return new Uint8Array(r[0].encode(e[0]))}let o=r.reduce((i,a)=>i+a.size,0),n=new ArrayBuffer(o),f=0;for(let i=0;i<e.length;i++){let a=e[i],s=r[i];if(!s.validate(a))throw new c(`Invalid value for type ${s.name}: ${a}`);let U=s.encode(a);new Uint8Array(n,f,s.size).set(new Uint8Array(U)),f+=s.size}return new Uint8Array(n)}};var l=class{decode(e,r){if(r.length===1&&r[0].name==="String")return[r[0].decode(e,0)];let o=r.reduce((i,a)=>i+a.size,0);if(e.byteLength<o)throw new d("Buffer too small for types");let n=[],f=0;for(let i of r){let a=i.decode(e,f);n.push(a),f+=i.size}return n}};return D(x);})();
